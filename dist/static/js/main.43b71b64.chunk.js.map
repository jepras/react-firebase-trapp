{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/teams/TeamSummary.js","components/teams/TeamList.js","components/dashboard/Dashboard.js","store/actions/dataActions.js","components/data/CreateData.js","components/teams/AddMember.js","store/actions/teamActions.js","components/tasks/TaskSummary.js","components/data/DataList.js","components/teams/TeamDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/teams/CreateTeam.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/dataReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","TeamSummary","_ref","team","teamName","TeamList","teams","map","id","key","teams_TeamSummary","Dashboard","_this$props","this","console","log","teams_TeamList","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderedBy","deleteData","task","getFirestore","doc","title","delete","catch","err","CreateData","content","_this","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","createData","onSubmit","onChange","htmlFor","item","authorId","set","objectSpread","authorFirstName","firstName","authorLastName","lastName","authorID","createdAt","Date","AddMember","mail","addMember","update","members","FieldValue","arrayUnion","TaskSummary","onDelete","index","moment","toDate","calendar","class","tasks","tasks_TaskSummary","ownProps","match","params","data","href","data_DataList","data_CreateData","teams_AddMember","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","user","fullName","CreateTeam","createTeam","history","push","teamOwnerId","teamOwnerFirstName","teamOwnerLastName","teamOwnerID","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","TeamDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","dataReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","devToolsExtension","f","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.43b71b64.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n// eslint-disable-next-line\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/teams\">Teams</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/createteam\">New Team</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"#\" onClick={props.signOut}>\r\n            Log Out\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    // communicate with database\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\n// newUser to store newUser\r\nexport const signUp = newUser => {\r\n  // need firebase for auth, firestore for collections\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // firebase method to authenticate and create newUser\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        // from resp we can get user id\r\n        // if collection doesnt exist, firestore will create. Here we create it in firestore.\r\n        return (\r\n          firestore\r\n            .collection('users')\r\n            // create new document with userId\r\n            .doc(resp.user.uid)\r\n            .set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0],\r\n              fullName: newUser.firstName + ' ' + newUser.lastName,\r\n              mail: newUser.email\r\n            })\r\n        );\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// eslint-disable-next-line\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/signup\">Signup</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">Login</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // check if user is authenticated.\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MyApp\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\n\r\nconst TeamSummary = ({ team }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 data-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{team.teamName}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamSummary;\r\n","import React from 'react';\r\nimport TeamSummary from './TeamSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TeamList = ({ teams }) => {\r\n  return (\r\n    <div className=\"teams-list section\">\r\n      {teams &&\r\n        teams.map(team => {\r\n          return (\r\n            <Link to={'/teams/' + team.id} key={team.id}>\r\n              <TeamSummary team={team} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","import React, { Component } from 'react';\r\nimport TeamList from '../teams/TeamList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // takes data & auth from props\r\n    const { auth, teams } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">{/* <DataList data={data} /> */}</div>\r\n          <div className=\"col s12 m6\">\r\n            <TeamList teams={teams} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // take in data from state,firestore,ordered,data\r\n    teams: state.firestore.ordered.teams,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // connects collection to to firestore to be used as state on site\r\n  firestoreConnect([\r\n    // which collection to connect to?\r\n    { collection: 'teams', orderedBy: ['createdAt', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","export const deleteData = (id, task) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n      .collection('tasks')\r\n      .doc(task.title)\r\n      .delete()\r\n      .then(() => {\r\n        dispatch({ type: 'DELETE_DATA', task });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'DELETE_DATA_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const createData = item => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n\r\n    // redux state\r\n    // getState gives us state object where we can fetch\r\n    const profile = getState().firebase.profile;\r\n    // get id attached to user profile -- IMPORTANT\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    // get collection\r\n    firestore\r\n      .collection('tasks')\r\n      .doc(item.title)\r\n      .set({\r\n        // use data from parameter item (where title is from createData component)\r\n        ...item,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorID: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_DATA', item });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_DATA_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createData } from '../../store/actions/dataActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateData extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    team: this.props.team.teamName\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.createData(this.state);\r\n    this.setState({\r\n      title: '',\r\n      content: ''\r\n    });\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <form\r\n        className=\"card white row add-data no-margin valign-wrapper\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div className=\"col input-field five\">\r\n          <i className=\"material-icons\">add</i>\r\n        </div>\r\n        <div className=\"input-field col s5\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            onChange={this.handleChange}\r\n            value={this.state.title}\r\n          />\r\n          <label htmlFor=\"title\">Title</label>\r\n        </div>\r\n\r\n        <div className=\"input-field col s5\">\r\n          <input\r\n            id=\"content\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={this.state.content}\r\n          />\r\n          <label htmlFor=\"content\">Content</label>\r\n        </div>\r\n        <div className=\"input-field col s2\">\r\n          <button className=\"btn pink lighten-1\">Create</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action createData imported in the top. Item is in the state. Dispatch as parameter.\r\n    createData: item => dispatch(createData(item))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateData);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMember } from '../../store/actions/teamActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass AddMember extends Component {\r\n  state = {\r\n    mail: '',\r\n    team: this.props.team.teamName\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.addMember(this.state);\r\n    this.setState({\r\n      mail: ''\r\n    });\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div className=\"section\">\r\n        <form\r\n          className=\"card white row add-data no-margin valign-wrapper\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"col s1\">\r\n            <i className=\"material-icons\">add</i>\r\n          </div>\r\n          <div className=\"input-field col s9\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"mail\"\r\n              onChange={this.handleChange}\r\n              value={this.state.mail}\r\n            />\r\n            <label htmlFor=\"mail\">Mail</label>\r\n          </div>\r\n\r\n          <div className=\"input-field col s2\">\r\n            <button className=\"btn pink lighten-1\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action addMember imported in the top. Item is in the state. Dispatch as parameter.\r\n    addMember: item => dispatch(addMember(item))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddMember);\r\n","export const createTeam = team => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n    // getState gives us state object where we can fetch\r\n    const profile = getState().firebase.profile;\r\n    // get id attached to user profile -- IMPORTANT\r\n    const teamOwnerId = getState().firebase.auth.uid;\r\n\r\n    // get collection\r\n    firestore\r\n      .collection('teams')\r\n      .doc(team.teamName)\r\n      .set({\r\n        // use data from parameter team (where title is from createTeam component)\r\n        ...team,\r\n        teamOwnerFirstName: profile.firstName,\r\n        teamOwnerLastName: profile.lastName,\r\n        teamOwnerID: teamOwnerId,\r\n        createdAt: new Date(),\r\n        members: []\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_TEAM', team });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_TEAM_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const addMember = item => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n\r\n    // get collection\r\n    firestore\r\n      .collection('teams')\r\n      .doc(item.team)\r\n      .update({\r\n        // use data from parameter team (where title is from createTeam component)\r\n        members: firestore.FieldValue.arrayUnion(item.mail)\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'ADD_MEMBER', item });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'ADD_MEMBER_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst TaskSummary = ({ onDelete, index, task }) => {\r\n  return (\r\n    <div className=\"card row data-summary valign-wrapper no-margin\">\r\n      <div className=\"col s7 z-depth-1\">\r\n        <p>\r\n          {task.title}: {task.content}\r\n        </p>\r\n      </div>\r\n      <div className=\"col s4\">\r\n        <p className=\"grey-text\">\r\n          {task.authorFirstName} -{moment(task.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n      <div className=\"col s1\">\r\n        <a\r\n          className=\"btn-small button-padding waves-effect\"\r\n          onClick={() => onDelete(index, task)}\r\n        >\r\n          <i class=\"material-icons\">delete</i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSummary;\r\n","import React from 'react';\r\nimport TaskSummary from '../tasks/TaskSummary';\r\nimport { deleteData } from '../../store/actions/dataActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DataList = ({ tasks, onDelete, team }) => {\r\n  console.log(tasks);\r\n  return (\r\n    <div className=\"data-list\">\r\n      {tasks &&\r\n        tasks.map((task, index) => {\r\n          if (task.team === team.teamName) {\r\n            return (\r\n              <TaskSummary\r\n                task={task}\r\n                onDelete={onDelete}\r\n                key={index}\r\n                index={index}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: (id, task) => {\r\n      dispatch(deleteData(id, task));\r\n      console.log(deleteData(id, task));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DataList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport CreateData from '../data/CreateData';\r\nimport TeamMembers from './TeamMembers';\r\nimport AddMember from './AddMember';\r\nimport DataList from '../data/DataList';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TeamDetails = props => {\r\n  const { team, auth, tasks } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  console.log(props);\r\n\r\n  if (team) {\r\n    return (\r\n      <div className=\"container section white team-details\">\r\n        <nav className=\"card z-depth-5\">\r\n          <div className=\"nav-wrapper grey darken-3 center-align\">\r\n            <span className=\"card-title\">{team.teamName}</span>\r\n          </div>\r\n          <div class=\"nav-content grey darken-3 center-align\">\r\n            <ul class=\"tabs tabs-transparent center\">\r\n              <li class=\"tab\">\r\n                <a href=\"#test1\">Last Week</a>\r\n              </li>\r\n              <li class=\"tab\">\r\n                <a class=\"active\" href=\"#test2\">\r\n                  This Week\r\n                </a>\r\n              </li>\r\n              <li class=\"tab\">\r\n                <a href=\"#test4\">Next Week</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <br />\r\n\r\n        <div className=\"card section\">\r\n          <span className=\"card-title space\">Tasks</span>\r\n\r\n          <DataList tasks={tasks} team={team} />\r\n          <CreateData team={team} />\r\n        </div>\r\n        <div className=\"card section\">\r\n          <h5 className=\"grey-text text-darken-3 space\">Add Member</h5>\r\n          {/* <TeamMembers team={team} /> */}\r\n          <AddMember team={team} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>loading teams</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const teams = state.firestore.data.teams;\r\n  const tasks = state.firestore.ordered.tasks;\r\n  // check if we have any teams in data, if so, look for the one with the id in const above.\r\n  const team = teams ? teams[id] : null;\r\n  return {\r\n    // return it in object team. Now available in props.team\r\n    team: team,\r\n    auth: state.firebase.auth,\r\n    tasks: tasks\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // give page access to database state\r\n  firestoreConnect([\r\n    // which collection to connect to?\r\n    { collection: 'teams', orderedBy: ['createdAt', 'desc'] },\r\n    { collection: 'tasks' }\r\n  ])\r\n)(TeamDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls signIn mapped to props & takes email/password from state.\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// map dispatch to props, to get access to sign in action from auth actions\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // creds is equal to credentials in signIn action in authActions\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // set signUp props to response to signUp action from authActions\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTeam } from '../../store/actions/teamActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateTeam extends Component {\r\n  state = {\r\n    teamName: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.createTeam(this.state);\r\n    // access to browser history through props\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a new team</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"teamName\" onChange={this.handleChange} />\r\n            <label htmlFor=\"teamName\">Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action createTeam imported in the top. Item is in the state. Dispatch as parameter.\r\n    createTeam: team => dispatch(createTeam(team))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateTeam);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport TeamDetails from './components/teams/TeamDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateTeam from './components/teams/CreateTeam';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/teams/:id\" component={TeamDetails} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/createteam\" component={CreateTeam} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      // send to own auth state, not firebase auth state\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('sign out success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\n// eslint-disable-next-line\r\nconst dataReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_DATA':\r\n      console.log('create data', action.item);\r\n      return state;\r\n    case 'CREATE_DATA_ERROR':\r\n      console.log('create data error,', action.err);\r\n      return state;\r\n    case 'DELETE_DATA':\r\n      console.log('delete data', action.task);\r\n      return state;\r\n    case 'DELETE_DATA_ERROR':\r\n      console.log('delete data error,', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import authReducer from './authReducer';\r\nimport dataReducer from './dataReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  // firestoreReducer syncs data in database to firestore\r\n  firestore: firestoreReducer,\r\n  // for login\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyAefOw2kBbbf-nhiBr-tyuJynZ9a4AkUow',\r\n  authDomain: 'teamreportingapp.firebaseapp.com',\r\n  databaseURL: 'https://teamreportingapp.firebaseio.com',\r\n  projectId: 'teamreportingapp',\r\n  storageBucket: '',\r\n  messagingSenderId: '135211953484'\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\n\r\n// Enhancing store with compose and elements from redux-firestore & react-redux-firebase, to use in dataACtions.\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n\r\n    reduxFirestore(fbConfig),\r\n    // make use of attachAuthIsReady to render on time - sync firestore profile with user from colleciton users\r\n    reactReduxFirebase(fbConfig, {\r\n      useFirestoreForProfile: true,\r\n      userProfile: 'users',\r\n      attachAuthIsReady: true\r\n    }),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n  )\r\n);\r\n\r\n// wait for firebase to be ready before rendering\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n  registerServiceWorker();\r\n});\r\n"],"sourceRoot":""}