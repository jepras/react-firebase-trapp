{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/tasks/TaskSummary.js","store/actions/dataActions.js","components/data/DataList.js","components/teams/TeamSummary.js","components/teams/TeamList.js","components/dashboard/Dashboard.js","components/data/DataDetails.js","components/data/CreateData.js","components/teams/TeamDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/teams/CreateTeam.js","store/actions/teamActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/dataReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","TaskSummary","_ref","_ref$task","task","title","authorFirstName","authorLastName","onDelete","index","moment","createdAt","toDate","calendar","deleteData","id","firestore","getFirestore","collection","doc","update","tasks","FieldValue","arrayRemove","catch","err","console","log","data","teamdata","map","tasks_TaskSummary","key","TeamSummary","team","teamName","TeamList","teams","teams_TeamSummary","Dashboard","_this$props","this","teams_TeamList","Redirect","Component","compose","ordered","firestoreConnect","orderedBy","ownProps","match","params","item","content","CreateData","_this","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","createData","onSubmit","onChange","htmlFor","authorId","arrayUnion","objectSpread","firstName","lastName","authorID","Date","teamOwnerFirstName","teamOwnerLastName","data_CreateData","data_DataList","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","user","set","CreateTeam","createTeam","history","push","teamOwnerId","teamOwnerID","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","DataDetails","TeamDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","dataReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"wSAmCeA,cACb,KAPyB,SAAAC,GACzB,MAAO,CACLC,QAAS,kBAAMD,ECdV,SAACA,EAAUE,EAAXC,IACYC,EAD6BD,EAAlBC,eAGzBC,OACAJ,UACAK,KAAK,WACJN,EAAS,CAAEO,KAAM,2BDYVR,CA7BO,SAAAS,GACpB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,UAAZ,UAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,eAAZ,aAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YAEFQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCACvBJ,EAAMQ,QAAQC,eEFZC,EAfQ,WACrB,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aCqBKf,cAPS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMC,SAASf,KACrBW,QAASG,EAAMC,SAASJ,UAIbjB,CA3BA,SAAAS,GAAS,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAERK,EAAQhB,EAAKiB,IACjBb,EAAAC,EAAAC,cAACY,EAAD,CAAeP,QAASA,IAExBP,EAAAC,EAAAC,cAACa,EAAD,MAEF,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAG,IAAIF,UAAU,cAAvB,SAGCS,uBCWMK,EA5BK,SAAAC,GAKd,IAAAC,EAAAD,EAJJE,KAAQC,EAIJF,EAJIE,MAAOC,EAIXH,EAJWG,gBAAiBC,EAI5BJ,EAJ4BI,eAChCC,EAGIN,EAHJM,SACAC,EAEIP,EAFJO,MACAL,EACIF,EADJE,KAEA,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAekB,GAC/BrB,EAAAC,EAAAC,cAAA,SACGuB,EADH,gBACuBH,EADvB,IACyCC,GAEzCvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACVuB,IAAON,EAAKO,UAAUC,UAAUC,YAEnC7B,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVL,KAAK,SACLQ,QAAS,kBAAMkB,EAASC,EAAOL,KAHjC,qBCnBKU,EAAa,SAACC,EAAIX,GAC7B,OAAO,SAAC7B,EAAUE,EAAXyB,GAAuDA,EAAhCvB,YAAgC,IACtDqC,GAAYC,EAD0Cf,EAAnBe,gBAGzCD,EACGE,WAAW,SACXC,IAAI,OAEJC,OAAO,CACNC,MAAOL,EAAUM,WAAWC,YAAYnB,KAEzCvB,KAAK,WACJN,EAAS,CAAEO,KAAM,cAAesB,WAEjCoB,MAAM,SAAAC,GACLlD,EAAS,CAAEO,KAAM,oBAAqB2C,YCmB/BnD,cACb,KAVyB,SAAAC,GACzB,MAAO,CACLiC,SAAU,SAACO,EAAIX,GACb7B,EAASuC,EAAWC,EAAIX,IACxBsB,QAAQC,IAAIb,EAAWC,EAAIX,OAKlB9B,CA7BE,SAAA4B,GAAwB,IAArB0B,EAAqB1B,EAArB0B,KAAMpB,EAAeN,EAAfM,SACpBqB,EAAWD,EAAKP,MAEpB,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZ0C,GACCA,EAASC,IAAI,SAAC1B,EAAMK,GAClB,OACEzB,EAAAC,EAAAC,cAAC6C,EAAD,CACE3B,KAAMA,EACNI,SAAUA,EACVwB,IAAKvB,EACLA,MAAOA,SCLNwB,EAVK,SAAA/B,GAAc,IAAXgC,EAAWhC,EAAXgC,KACrB,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAe+C,EAAKC,aCa7BC,EAfE,SAAAlC,GAAe,IAAZmC,EAAYnC,EAAZmC,MAClB,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZkD,GACCA,EAAMP,IAAI,SAAAI,GACR,OACElD,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAI,UAAY6C,EAAKnB,GAAIiB,IAAKE,EAAKnB,IACvC/B,EAAAC,EAAAC,cAACoD,EAAD,CAAaJ,KAAMA,kCCH3BK,mLACK,IAAAC,EAEuBC,KAAK1D,MAArBH,GAFP4D,EAECZ,KAFDY,EAEO5D,MAAMyD,EAFbG,EAEaH,MACpB,OAAKzD,EAAKiB,KAEV6B,QAAQC,IAAIc,KAAK1D,OAGfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACwD,EAAD,CAAUL,MAAOA,QATHrD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,mBAJfuD,aA8BTC,cACbvE,YAVsB,SAAAoB,GACtB,MAAO,CAELkC,KAAMlC,EAAMsB,UAAU8B,QAAQlB,KAC9BS,MAAO3C,EAAMsB,UAAU8B,QAAQT,MAC/BzD,KAAMc,EAAMC,SAASf,QAOvBmE,2BAAiB,CAEf,CAAE7B,WAAY,OAAQ8B,UAAW,CAAC,YAAa,SAC/C,CAAE9B,WAAY,QAAS8B,UAAW,CAAC,YAAa,WANrCH,CAQbN,GCGaM,cACbvE,YAbsB,SAACoB,EAAOuD,GAC9B,IAAMlC,EAAKkC,EAASC,MAAMC,OAAOpC,GAC3Ba,EAAOlC,EAAMsB,UAAUY,KAAKA,KAGlC,MAAO,CAELwB,KAHWxB,EAAOA,EAAKb,GAAM,KAI7BnC,KAAMc,EAAMC,SAASf,QAOvBmE,2BAAiB,CAAC,CAAE7B,WAAY,UAHnB2B,CA1CK,SAAA9D,GAAS,IACnBqE,EAAerE,EAAfqE,KACR,OADuBrE,EAATH,KACJiB,IAENuD,EAEApE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAciE,EAAK/C,OACnCrB,EAAAC,EAAAC,cAAA,SAAIkE,EAAKC,UAEXrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,wBACakE,EAAK9C,gBADlB,IACoC8C,EAAK7C,gBAEzCvB,EAAAC,EAAAC,cAAA,WAAMwB,IAAO0C,EAAKzC,UAAUC,UAAUC,eAO5C7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,2BAtBgBF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,sBCJ/BiE,6MACJ5D,MAAQ,CACNW,MAAO,GACPgD,QAAS,GACTnB,KAAMqB,EAAKxE,MAAMmD,KAAKC,YAExBqB,aAAe,SAAAC,GACbF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAEI,OAAO9C,GAAK0C,EAAEI,OAAOC,WAG5BC,aAAe,SAAAN,GACbA,EAAEO,iBAEFT,EAAKxE,MAAMkF,WAAWV,EAAK7D,OAC3B6D,EAAKG,SAAS,CACZrD,MAAO,GACPgD,QAAS,8EAGJ,IAAAb,EACgBC,KAAK1D,MAApBH,EADD4D,EACC5D,KADD4D,EACON,KACd,OAAKtD,EAAKiB,KAEV6B,QAAQC,IAAIc,KAAK1D,OAGfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQ+E,SAAUzB,KAAKsB,cACrC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,oBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEJ,KAAK,OACLiC,GAAG,QACHoD,SAAU1B,KAAKe,aACfM,MAAOrB,KAAK/C,MAAMW,QAEpBrB,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,SAAf,UAGFpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YACE6B,GAAG,UACH5B,UAAU,uBACVgF,SAAU1B,KAAKe,aACfM,MAAOrB,KAAK/C,MAAM2D,UAEpBrE,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,WAAf,YAEFpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAlB,cA7BcH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,mBAtBduD,aAwEVtE,cAbS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMC,SAASf,OAIE,SAAAL,GACzB,MAAO,CAEL0F,WAAY,SAAAb,GAAI,OAAI7E,ENrDE,SAAA6E,GACxB,OAAO,SAAC7E,EAAUE,EAAXC,GAAuDA,EAAhCC,YAAgC,IAEtDqC,GAAYC,EAF0CvC,EAAnBuC,gBAInC1B,EAAUd,IAAWkB,SAASJ,QAE9B8E,EAAW5F,IAAWkB,SAASf,KAAKiB,IAG1CmB,EACGE,WAAW,SACXC,IAAIiC,EAAKlB,MACTd,OAAO,CAENC,MAAOL,EAAUM,WAAWgD,WAArBX,OAAAY,EAAA,EAAAZ,CAAA,GACFP,EADE,CAEL9C,gBAAiBf,EAAQiF,UACzBjE,eAAgBhB,EAAQkF,SACxBC,SAAUL,EACV1D,UAAW,IAAIgE,UAGlB9F,KAAK,WACJN,EAAS,CAAEO,KAAM,cAAesE,WAEjC5B,MAAM,SAAAC,GACLlD,EAAS,CAAEO,KAAM,oBAAqB2C,WM0BbwC,CAAWb,OAI7B9E,CAGbgF,GCvBaT,cACbvE,YAhBsB,SAACoB,EAAOuD,GAC9B,IAAMlC,EAAKkC,EAASC,MAAMC,OAAOpC,GAC3BsB,EAAQ3C,EAAMsB,UAAUY,KAAKS,MAE7BH,EAAOG,EAAQA,EAAMtB,GAAM,KACjC,MAAO,CAELmB,KAAMA,EACNtD,KAAMc,EAAMC,SAASf,KACrBgD,KAAMM,KASRa,2BAAiB,CACf,CACE7B,WAAY,WALH2B,CAjDK,SAAA9D,GAAS,IACnBmD,EAAqBnD,EAArBmD,KAAMtD,EAAeG,EAAfH,KAAMgD,EAAS7C,EAAT6C,KACpB,OAAKhD,EAAKiB,KAEV6B,QAAQC,IAAI5C,GACZ2C,QAAQC,IAAI5C,EAAMmE,MAAMC,OAAOpC,IAE3BmB,EAEAlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc+C,EAAKC,WAErCnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,yBACcgD,EAAK0C,mBADnB,IACwC1C,EAAK2C,qBAKjD7F,EAAAC,EAAAC,cAAC4F,EAAD,CAAY5C,KAAMA,IAClBlD,EAAAC,EAAAC,cAAC6F,EAAD,CAAUnD,KAAMA,KAKlB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,4BA1BgBF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,cCL/B2F,6MACJtF,MAAQ,CACNuF,MAAO,GACPC,SAAU,MAEZ1B,aAAe,SAAAC,GACbF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAEI,OAAO9C,GAAK0C,EAAEI,OAAOC,WAG5BC,aAAe,SAAAN,GACbA,EAAEO,iBAEFT,EAAKxE,MAAMoG,OAAO5B,EAAK7D,gFAEhB,IAAA8C,EACqBC,KAAK1D,MAAzBqG,EADD5C,EACC4C,UACR,OAFO5C,EACY5D,KACViB,IAAYb,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,MAGhCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQ+E,SAAUzB,KAAKsB,cACrC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,SAAf,SACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQiC,GAAG,QAAQoD,SAAU1B,KAAKe,gBAEhDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,YAAf,YACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWiC,GAAG,WAAWoD,SAAU1B,KAAKe,gBAEtDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZiG,EAAYpG,EAAAC,EAAAC,cAAA,SAAIkG,GAAiB,gBAlC3BxC,aA0DNtE,cAfS,SAAAoB,GACtB,MAAO,CACL0F,UAAW1F,EAAMd,KAAKwG,UACtBxG,KAAMc,EAAMC,SAASf,OAKE,SAAAL,GACzB,MAAO,CAEL4G,OAAQ,SAAAE,GAAK,OAAI9G,GZ3DC+G,EY2DeD,EZ1D5B,SAAC9G,EAAUE,EAAXyB,IAEYvB,EAF6BuB,EAAlBvB,eAIzBC,OACA2G,2BAA2BD,EAAYL,MAAOK,EAAYJ,UAC1DrG,KAAK,WACJN,EAAS,CAAEO,KAAM,oBAElB0C,MAAM,SAAAC,GACLlD,EAAS,CAAEO,KAAM,cAAe2C,aAXlB,IAAA6D,KY+DPhH,CAGb0G,GC7DIQ,6MACJ9F,MAAQ,CACNuF,MAAO,GACPC,SAAU,GACVV,UAAW,GACXC,SAAU,MAEZjB,aAAe,SAAAC,GACbF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAEI,OAAO9C,GAAK0C,EAAEI,OAAOC,WAG5BC,aAAe,SAAAN,GACbA,EAAEO,iBACFT,EAAKxE,MAAM0G,OAAOlC,EAAK7D,gFAEhB,IAAA8C,EACqBC,KAAK1D,MAAzBqG,EADD5C,EACC4C,UACR,OAFO5C,EACY5D,KACViB,IAAYb,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,MAGhCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQ+E,SAAUzB,KAAKsB,cACrC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,SAAf,SACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQiC,GAAG,QAAQoD,SAAU1B,KAAKe,gBAEhDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,YAAf,YACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWiC,GAAG,WAAWoD,SAAU1B,KAAKe,gBAEtDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,aAAf,cACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOiC,GAAG,YAAYoD,SAAU1B,KAAKe,gBAEnDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,YAAf,aACApF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOiC,GAAG,WAAWoD,SAAU1B,KAAKe,gBAElDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZiG,EAAYpG,EAAAC,EAAAC,cAAA,SAAIkG,GAAiB,gBA3C3BxC,aAkENtE,cAdS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMC,SAASf,KACrBwG,UAAW1F,EAAMd,KAAKwG,YAIC,SAAA7G,GACzB,MAAO,CAELkH,OAAQ,SAAAC,GAAO,OAAInH,EbtCD,SAAAmH,GAEpB,OAAO,SAACnH,EAAUE,EAAXkH,GAAuD,IAAhChH,EAAgCgH,EAAhChH,YAAasC,EAAmB0E,EAAnB1E,aACnCtB,EAAWhB,IACXqC,EAAYC,IAGlBtB,EACGf,OACAgH,+BAA+BF,EAAQT,MAAOS,EAAQR,UACtDrG,KAAK,SAAAgH,GAGJ,OACE7E,EACGE,WAAW,SAEXC,IAAI0E,EAAKC,KAAKjG,KACdkG,IAAI,CACHvB,UAAWkB,EAAQlB,UACnBC,SAAUiB,EAAQjB,SAClBjF,SAAUkG,EAAQlB,UAAU,GAAKkB,EAAQjB,SAAS,OAIzD5F,KAAK,WACJN,EAAS,CAAEO,KAAM,qBAElB0C,MAAM,SAAAC,GACLlD,EAAS,CAAEO,KAAM,eAAgB2C,WaSTgE,CAAOC,OAIxBpH,CAGbkH,GCrEIQ,6MACJtG,MAAQ,CACNyC,SAAU,MAGZqB,aAAe,SAAAC,GACbF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAEI,OAAO9C,GAAK0C,EAAEI,OAAOC,WAI5BC,aAAe,SAAAN,GACbA,EAAEO,iBAEFT,EAAKxE,MAAMkH,WAAW1C,EAAK7D,OAE3B6D,EAAKxE,MAAMmH,QAAQC,KAAK,8EAIxB,OADiB1D,KAAK1D,MAAdH,KACEiB,IAGRb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQ+E,SAAUzB,KAAKsB,cACrC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOiC,GAAG,WAAWoD,SAAU1B,KAAKe,eAChDxE,EAAAC,EAAAC,cAAA,SAAOkF,QAAQ,YAAf,UAEFpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAlB,aAXcH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUtD,GAAG,mBApBduD,aAoDVtE,cAbS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMC,SAASf,OAIE,SAAAL,GACzB,MAAO,CAEL0H,WAAY,SAAA/D,GAAI,OAAI3D,ECrDE,SAAA2D,GACxB,OAAO,SAAC3D,EAAUE,EAAXyB,GAAuDA,EAAhCvB,YAAgC,IAEtDqC,GAAYC,EAF0Cf,EAAnBe,gBAInC1B,EAAUd,IAAWkB,SAASJ,QAE9B6G,EAAc3H,IAAWkB,SAASf,KAAKiB,IAG7CmB,EACGE,WAAW,SACXC,IAAIe,EAAKC,UACT4D,IAHHpC,OAAAY,EAAA,EAAAZ,CAAA,GAKOzB,EALP,CAMI0C,mBAAoBrF,EAAQiF,UAC5BK,kBAAmBtF,EAAQkF,SAC3B4B,YAAaD,EACbzF,UAAW,IAAIgE,KACftD,MAAO,MAERxC,KAAK,WACJN,EAAS,CAAEO,KAAM,cAAeoD,WAEjCV,MAAM,SAAAC,GACLlD,EAAS,CAAEO,KAAM,oBAAqB2C,WD2BbwE,CAAW/D,OAI7B5D,CAGb0H,GE9BaM,mLAlBX,OACEtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtE,IACjCvD,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnC9H,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWE,IACpC/H,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW7B,IACjChG,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWrB,IACjCxG,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWb,cAZ/BpD,aCEZoE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlE,MACvB,2DAIS,SAASmE,EAASC,GAC/B,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBP,OAAOC,UAC3CO,SAAWR,OAAOC,SAASO,OAIvC,OAGFR,OAAOS,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAMJ,GAAN,sBAEPT,IA6DV,SAAiCY,EAAON,GAEtCQ,MAAMF,GACH/I,KAAK,SAAAkJ,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CZ,UAAUa,cAAcC,MAAMxJ,KAAK,SAAAyJ,GACjCA,EAAaC,aAAa1J,KAAK,WAC7BqI,OAAOC,SAASqB,aAKpBC,EAAgBb,EAAON,KAG1B9F,MAAM,WACLE,QAAQC,IACN,mEAjFA+G,CAAwBd,EAAON,GAI/BC,UAAUa,cAAcC,MAAMxJ,KAAK,WACjC6C,QAAQC,IACN,+GAMJ8G,EAAgBb,EAAON,MAM/B,SAASmB,EAAgBb,EAAON,GAC9BC,UAAUa,cACPf,SAASO,GACT/I,KAAK,SAAAyJ,GACJA,EAAaK,cAAgB,WAC3B,IAAMC,EAAmBN,EAAaO,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlJ,QACf6H,UAAUa,cAAcW,YAI1BrH,QAAQC,IACN,gHAKE2F,GAAUA,EAAO0B,UACnB1B,EAAO0B,SAASV,KAMlB5G,QAAQC,IAAI,sCAGR2F,GAAUA,EAAO2B,WACnB3B,EAAO2B,UAAUX,SAO5B9G,MAAM,SAAA0H,GACLxH,QAAQwH,MAAM,4CAA6CA,KC7FjE,IAAMC,EAAY,CAChB/D,UAAW,MAoCEgE,EAjCK,WAA+B,IAA9B1J,EAA8B2J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAO1K,MACb,IAAK,cAEH,OAAO6E,OAAAY,EAAA,EAAAZ,CAAA,GACFjE,EADL,CAEE0F,UAAW,iBAEf,IAAK,gBAEH,OADA1D,QAAQC,IAAI,iBACLgC,OAAAY,EAAA,EAAAZ,CAAA,GACFjE,EADL,CAEE0F,UAAW,OAEf,IAAK,kBAEH,OADA1D,QAAQC,IAAI,oBACLjC,EACT,IAAK,iBAEH,OADAgC,QAAQC,IAAI,kBACLgC,OAAAY,EAAA,EAAAZ,CAAA,GACFjE,EADL,CAEE0F,UAAW,OAEf,IAAK,eACH,OAAOzB,OAAAY,EAAA,EAAAZ,CAAA,GACFjE,EADL,CAEE0F,UAAWoE,EAAO/H,IAAIgI,UAE1B,QACE,OAAO/J,ICjCPyJ,EAAY,GAsBHO,EAnBK,WAA+B,IAA9BhK,EAA8B2J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAO1K,MACb,IAAK,cAEH,OADA4C,QAAQC,IAAI,cAAe6H,EAAOpG,MAC3B1D,EACT,IAAK,oBAEH,OADAgC,QAAQC,IAAI,qBAAsB6H,EAAO/H,KAClC/B,EACT,IAAK,cAEH,OADAgC,QAAQC,IAAI,cAAe6H,EAAOpJ,MAC3BV,EACT,IAAK,oBAEH,OADAgC,QAAQC,IAAI,qBAAsB6H,EAAO/H,KAClC/B,EACT,QACE,OAAOA,YCHEiK,GATKC,YAAgB,CAClChL,KAAMwK,EACNxH,KAAM8H,EAEN1I,UAAW6I,mBAEXlK,SAAUmK,gECCZnK,KAASoK,cARI,CACXC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,GACfC,kBAAmB,iBAGrB1K,KAASqB,YAAYsJ,SAAS,CAAEC,uBAAuB,IAExC5K,UAAf,ECFM6K,GAAQC,YACZd,GACA9G,YACE6H,YAAgBC,KAAMC,kBAAkB,CAAEjM,0BAAasC,+BACvD4J,yBAAeC,IAEfC,6BAAmBD,GAAU,CAC3BE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAMzBV,GAAMW,oBAAoBtM,KAAK,WAC7BuM,IAASC,OACPrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAUd,MAAOA,IACfxL,EAAAC,EAAAC,cAACqM,EAAD,OAEFC,SAASC,eAAe,SAE1BC","file":"static/js/main.2f5bd183.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n// eslint-disable-next-line\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/teams\">Teams</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/createteam\">New Team</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    // communicate with database\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\n// newUser to store newUser\r\nexport const signUp = newUser => {\r\n  // need firebase for auth, firestore for collections\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // firebase method to authenticate and create newUser\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        // from resp we can get user id\r\n        // if collection doesnt exist, firestore will create. Here we create it in firestore.\r\n        return (\r\n          firestore\r\n            .collection('users')\r\n            // create new document with userId\r\n            .doc(resp.user.uid)\r\n            .set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        );\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// eslint-disable-next-line\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/signup\">Signup</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">Login</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // check if user is authenticated.\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MyApp\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst TaskSummary = ({\r\n  task: { title, authorFirstName, authorLastName },\r\n  onDelete,\r\n  index,\r\n  task\r\n}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 data-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{title}</span>\r\n        <p>\r\n          {index} - Posted by {authorFirstName} {authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(task.createdAt.toDate()).calendar()}\r\n        </p>\r\n        <button\r\n          className=\"btn\"\r\n          type=\"button\"\r\n          onClick={() => onDelete(index, task)}\r\n        >\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSummary;\r\n","export const deleteData = (id, task) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n      .collection('teams')\r\n      .doc('LFC')\r\n\r\n      .update({\r\n        tasks: firestore.FieldValue.arrayRemove(task)\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'DELETE_DATA', task });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'DELETE_DATA_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const createData = item => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n    // getState gives us state object where we can fetch\r\n    const profile = getState().firebase.profile;\r\n    // get id attached to user profile -- IMPORTANT\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    // get collection\r\n    firestore\r\n      .collection('teams')\r\n      .doc(item.team)\r\n      .update({\r\n        // use data from parameter item (where title is from createData component)\r\n        tasks: firestore.FieldValue.arrayUnion({\r\n          ...item,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorID: authorId,\r\n          createdAt: new Date()\r\n        })\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_DATA', item });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_DATA_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TaskSummary from '../tasks/TaskSummary';\r\nimport { deleteData } from '../../store/actions/dataActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DataList = ({ data, onDelete }) => {\r\n  var teamdata = data.tasks;\r\n\r\n  return (\r\n    <div className=\"data-list section\">\r\n      {teamdata &&\r\n        teamdata.map((task, index) => {\r\n          return (\r\n            <TaskSummary\r\n              task={task}\r\n              onDelete={onDelete}\r\n              key={index}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: (id, task) => {\r\n      dispatch(deleteData(id, task));\r\n      console.log(deleteData(id, task));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DataList);\r\n","import React from 'react';\r\n\r\nconst TeamSummary = ({ team }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 data-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{team.teamName}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamSummary;\r\n","import React from 'react';\r\nimport TeamSummary from './TeamSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TeamList = ({ teams }) => {\r\n  return (\r\n    <div className=\"teams-list section\">\r\n      {teams &&\r\n        teams.map(team => {\r\n          return (\r\n            <Link to={'/teams/' + team.id} key={team.id}>\r\n              <TeamSummary team={team} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","import React, { Component } from 'react';\r\nimport DataList from '../data/DataList';\r\nimport TeamList from '../teams/TeamList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // takes data & auth from props\r\n    const { data, auth, teams } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">{/* <DataList data={data} /> */}</div>\r\n          <div className=\"col s12 m6\">\r\n            <TeamList teams={teams} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // take in data from state,firestore,ordered,data\r\n    data: state.firestore.ordered.data,\r\n    teams: state.firestore.ordered.teams,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // connects collection to to firestore to be used as state on site\r\n  firestoreConnect([\r\n    // which collection to connect to?\r\n    { collection: 'data', orderedBy: ['createdAt', 'desc'] },\r\n    { collection: 'teams', orderedBy: ['createdAt', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst DataDetails = props => {\r\n  const { item, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (item) {\r\n    return (\r\n      <div className=\"container section item-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{item.title}</span>\r\n            <p>{item.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {item.authorFirstName} {item.authorLastName}\r\n            </div>\r\n            <div>{moment(item.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container cente\">\r\n        <p>loading items</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const data = state.firestore.data.data;\r\n  // check if we have any items in data, if so, look for the one with the id in const above.\r\n  const item = data ? data[id] : null;\r\n  return {\r\n    // return it in object item. Now available in props.item\r\n    item: item,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // give page access to database state\r\n  firestoreConnect([{ collection: 'data' }])\r\n)(DataDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createData } from '../../store/actions/dataActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateData extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    team: this.props.team.teamName\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.createData(this.state);\r\n    this.setState({\r\n      title: '',\r\n      content: ''\r\n    });\r\n  };\r\n  render() {\r\n    const { auth, team } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create some data</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              onChange={this.handleChange}\r\n              value={this.state.title}\r\n            />\r\n            <label htmlFor=\"title\">Title</label>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n              value={this.state.content}\r\n            />\r\n            <label htmlFor=\"content\">Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action createData imported in the top. Item is in the state. Dispatch as parameter.\r\n    createData: item => dispatch(createData(item))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateData);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport CreateData from '../data/CreateData';\r\nimport DataList from '../data/DataList';\r\n\r\nconst TeamDetails = props => {\r\n  const { team, auth, data } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  console.log(props);\r\n  console.log(props.match.params.id);\r\n\r\n  if (team) {\r\n    return (\r\n      <div className=\"container section team-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{team.teamName}</span>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Created by {team.teamOwnerFirstName} {team.teamOwnerLastName}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <CreateData team={team} />\r\n        <DataList data={data} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>loading teams</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const teams = state.firestore.data.teams;\r\n  // check if we have any teams in data, if so, look for the one with the id in const above.\r\n  const team = teams ? teams[id] : null;\r\n  return {\r\n    // return it in object team. Now available in props.team\r\n    team: team,\r\n    auth: state.firebase.auth,\r\n    data: team\r\n    // working on getting data just for this team showing\r\n    /* data: state.firestore.ordered.teams */\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // give page access to database state\r\n  firestoreConnect([\r\n    {\r\n      collection: 'teams'\r\n    }\r\n  ])\r\n)(TeamDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls signIn mapped to props & takes email/password from state.\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// map dispatch to props, to get access to sign in action from auth actions\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // creds is equal to credentials in signIn action in authActions\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // set signUp props to response to signUp action from authActions\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTeam } from '../../store/actions/teamActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateTeam extends Component {\r\n  state = {\r\n    teamName: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.createTeam(this.state);\r\n    // access to browser history through props\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a new team</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"teamName\" onChange={this.handleChange} />\r\n            <label htmlFor=\"teamName\">Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action createTeam imported in the top. Item is in the state. Dispatch as parameter.\r\n    createTeam: team => dispatch(createTeam(team))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateTeam);\r\n","export const createTeam = team => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n    // getState gives us state object where we can fetch\r\n    const profile = getState().firebase.profile;\r\n    // get id attached to user profile -- IMPORTANT\r\n    const teamOwnerId = getState().firebase.auth.uid;\r\n\r\n    // get collection\r\n    firestore\r\n      .collection('teams')\r\n      .doc(team.teamName)\r\n      .set({\r\n        // use data from parameter team (where title is from createTeam component)\r\n        ...team,\r\n        teamOwnerFirstName: profile.firstName,\r\n        teamOwnerLastName: profile.lastName,\r\n        teamOwnerID: teamOwnerId,\r\n        createdAt: new Date(),\r\n        tasks: []\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_TEAM', team });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_TEAM_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport DataDetails from './components/data/DataDetails';\r\nimport TeamDetails from './components/teams/TeamDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateTeam from './components/teams/CreateTeam';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/data/:id\" component={DataDetails} />\r\n            <Route path=\"/teams/:id\" component={TeamDetails} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/createteam\" component={CreateTeam} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      // send to own auth state, not firebase auth state\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('sign out success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\n// eslint-disable-next-line\r\nconst dataReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_DATA':\r\n      console.log('create data', action.item);\r\n      return state;\r\n    case 'CREATE_DATA_ERROR':\r\n      console.log('create data error,', action.err);\r\n      return state;\r\n    case 'DELETE_DATA':\r\n      console.log('delete data', action.task);\r\n      return state;\r\n    case 'DELETE_DATA_ERROR':\r\n      console.log('delete data error,', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import authReducer from './authReducer';\r\nimport dataReducer from './dataReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  // firestoreReducer syncs data in database to firestore\r\n  firestore: firestoreReducer,\r\n  // for login\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyAefOw2kBbbf-nhiBr-tyuJynZ9a4AkUow',\r\n  authDomain: 'teamreportingapp.firebaseapp.com',\r\n  databaseURL: 'https://teamreportingapp.firebaseio.com',\r\n  projectId: 'teamreportingapp',\r\n  storageBucket: '',\r\n  messagingSenderId: '135211953484'\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\n\r\n// Enhancing store with compose and elements from redux-firestore & react-redux-firebase, to use in dataACtions.\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig),\r\n    // make use of attachAuthIsReady to render on time - sync firestore profile with user from colleciton users\r\n    reactReduxFirebase(fbConfig, {\r\n      useFirestoreForProfile: true,\r\n      userProfile: 'users',\r\n      attachAuthIsReady: true\r\n    })\r\n  )\r\n);\r\n\r\n// wait for firebase to be ready before rendering\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n  registerServiceWorker();\r\n});\r\n"],"sourceRoot":""}